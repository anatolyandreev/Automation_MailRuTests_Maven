<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="1" ignored="0" total="2" passed="1">
  <reporter-output>
  </reporter-output>
  <suite name="by.htp.library.dao.BookDaoTest" duration-ms="275" started-at="2018-04-05T20:05:21Z" finished-at="2018-04-05T20:05:21Z">
    <groups>
      <group name="one">
        <method signature="BookDaoTest.testGetBookByTitle()[pri:0, instance:by.htp.library.dao.BookDaoTest@2f7c7260]" name="testGetBookByTitle" class="by.htp.library.dao.BookDaoTest"/>
      </group> <!-- one -->
      <group name="two">
        <method signature="BookDaoTest.testRecievedCorrectBookCount()[pri:0, instance:by.htp.library.dao.BookDaoTest@2f7c7260]" name="testRecievedCorrectBookCount" class="by.htp.library.dao.BookDaoTest"/>
      </group> <!-- two -->
    </groups>
    <test name="Command line test" duration-ms="275" started-at="2018-04-05T20:05:21Z" finished-at="2018-04-05T20:05:21Z">
      <class name="by.htp.library.dao.BookDaoTest">
        <test-method status="PASS" signature="initDefaultDBConnection()[pri:0, instance:by.htp.library.dao.BookDaoTest@2f7c7260]" name="initDefaultDBConnection" is-config="true" duration-ms="237" started-at="2018-04-05T23:05:21Z" finished-at="2018-04-05T23:05:21Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initDefaultDBConnection -->
        <test-method status="PASS" signature="getExpectedBookByTitle()[pri:0, instance:by.htp.library.dao.BookDaoTest@2f7c7260]" name="getExpectedBookByTitle" is-config="true" duration-ms="2" started-at="2018-04-05T23:05:21Z" finished-at="2018-04-05T23:05:21Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getExpectedBookByTitle -->
        <test-method status="PASS" signature="getExpectedList()[pri:0, instance:by.htp.library.dao.BookDaoTest@2f7c7260]" name="getExpectedList" is-config="true" duration-ms="1" started-at="2018-04-05T23:05:21Z" finished-at="2018-04-05T23:05:21Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getExpectedList -->
        <test-method status="PASS" signature="initDao()[pri:0, instance:by.htp.library.dao.BookDaoTest@2f7c7260]" name="initDao" is-config="true" duration-ms="1" started-at="2018-04-05T23:05:21Z" finished-at="2018-04-05T23:05:21Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initDao -->
        <test-method status="FAIL" signature="testGetBookByTitle()[pri:0, instance:by.htp.library.dao.BookDaoTest@2f7c7260]" name="testGetBookByTitle" duration-ms="9" started-at="2018-04-05T23:05:21Z" finished-at="2018-04-05T23:05:21Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[The received count of books by title is not correct expected [2] but found [1]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: The received count of books by title is not correct expected [2] but found [1]
	at org.testng.Assert.fail(Assert.java:93)
	at org.testng.Assert.failNotEquals(Assert.java:512)
	at org.testng.Assert.assertEqualsImpl(Assert.java:134)
	at org.testng.Assert.assertEquals(Assert.java:115)
	at org.testng.Assert.assertEquals(Assert.java:388)
	at by.htp.library.dao.BookDaoTest.testGetBookByTitle(BookDaoTest.java:86)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:108)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:661)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:869)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1193)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:126)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
	at org.testng.TestRunner.privateRun(TestRunner.java:744)
	at org.testng.TestRunner.run(TestRunner.java:602)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:380)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:375)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:340)
	at org.testng.SuiteRunner.run(SuiteRunner.java:289)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1301)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1226)
	at org.testng.TestNG.runSuites(TestNG.java:1144)
	at org.testng.TestNG.run(TestNG.java:1115)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:77)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:110)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:106)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.maven.surefire.util.ReflectionUtils.invokeMethodWithArray(ReflectionUtils.java:189)
	at org.apache.maven.surefire.booter.ProviderFactory$ProviderProxy.invoke(ProviderFactory.java:165)
	at org.apache.maven.surefire.booter.ProviderFactory.invokeProvider(ProviderFactory.java:85)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:115)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:75)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetBookByTitle -->
        <test-method status="PASS" signature="cleanExpectedValues()[pri:0, instance:by.htp.library.dao.BookDaoTest@2f7c7260]" name="cleanExpectedValues" is-config="true" duration-ms="0" started-at="2018-04-05T23:05:21Z" finished-at="2018-04-05T23:05:21Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cleanExpectedValues -->
        <test-method status="PASS" signature="getExpectedBookByTitle()[pri:0, instance:by.htp.library.dao.BookDaoTest@2f7c7260]" name="getExpectedBookByTitle" is-config="true" duration-ms="1" started-at="2018-04-05T23:05:21Z" finished-at="2018-04-05T23:05:21Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getExpectedBookByTitle -->
        <test-method status="PASS" signature="getExpectedList()[pri:0, instance:by.htp.library.dao.BookDaoTest@2f7c7260]" name="getExpectedList" is-config="true" duration-ms="1" started-at="2018-04-05T23:05:21Z" finished-at="2018-04-05T23:05:21Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getExpectedList -->
        <test-method status="PASS" signature="testRecievedCorrectBookCount()[pri:0, instance:by.htp.library.dao.BookDaoTest@2f7c7260]" name="testRecievedCorrectBookCount" duration-ms="6" started-at="2018-04-05T23:05:21Z" finished-at="2018-04-05T23:05:21Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRecievedCorrectBookCount -->
        <test-method status="PASS" signature="initDao()[pri:0, instance:by.htp.library.dao.BookDaoTest@2f7c7260]" name="initDao" is-config="true" duration-ms="0" started-at="2018-04-05T23:05:21Z" finished-at="2018-04-05T23:05:21Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initDao -->
        <test-method status="PASS" signature="cleanExpectedValues()[pri:0, instance:by.htp.library.dao.BookDaoTest@2f7c7260]" name="cleanExpectedValues" is-config="true" duration-ms="1" started-at="2018-04-05T23:05:21Z" finished-at="2018-04-05T23:05:21Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cleanExpectedValues -->
        <test-method status="PASS" signature="closeDBConnection()[pri:0, instance:by.htp.library.dao.BookDaoTest@2f7c7260]" name="closeDBConnection" is-config="true" duration-ms="0" started-at="2018-04-05T23:05:21Z" finished-at="2018-04-05T23:05:21Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- closeDBConnection -->
      </class> <!-- by.htp.library.dao.BookDaoTest -->
    </test> <!-- Command line test -->
  </suite> <!-- by.htp.library.dao.BookDaoTest -->
</testng-results>
